name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allow manual trigger
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build site
        run: npm run build
        # Add build environment variables if needed
        env:
          PUBLIC_SITE_URL: https://phonear.me
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Upload build artifact to S3
        run: |
          # Create a unique folder name using the run ID and job attempt
          ARTIFACT_PATH="artifacts/build-${{ github.run_id }}-${{ github.run_attempt }}"
          
          # Upload the build files to S3
          aws s3 cp --recursive dist/ s3://pho-near-me-static/${ARTIFACT_PATH}/
          
          # Save the artifact path for other jobs
          echo "ARTIFACT_PATH=${ARTIFACT_PATH}" >> $GITHUB_ENV
          
          # Output the artifact location for debugging
          echo "Build artifacts uploaded to s3://pho-near-me-static/${ARTIFACT_PATH}/"

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Download build artifact from S3
        run: |
          # Get the artifact path from the build job
          ARTIFACT_PATH="${{ needs.build.outputs.ARTIFACT_PATH }}"
          
          # Create the dist directory
          mkdir -p dist
          
          # Download the artifacts from S3
          aws s3 cp --recursive s3://pho-near-me-static/${ARTIFACT_PATH}/ dist/
          
          echo "Downloaded artifacts from S3 to dist/"
          
      - name: Check if static bucket exists and create if needed
        run: |
          if ! aws s3api head-bucket --bucket pho-near-me-static 2>/dev/null; then
            echo "Creating static bucket..."
            aws s3 mb s3://pho-near-me-static
            # Configure the bucket for static website hosting
            aws s3 website s3://pho-near-me-static --index-document index.html --error-document 404.html
            # Apply bucket policy for public read access
            echo '{
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "PublicReadGetObject",
                  "Effect": "Allow",
                  "Principal": "*",
                  "Action": "s3:GetObject",
                  "Resource": "arn:aws:s3:::pho-near-me-static/*"
                }
              ]
            }' > bucket-policy.json
            aws s3api put-bucket-policy --bucket pho-near-me-static --policy file://bucket-policy.json
          fi

      - name: Deploy to S3
        run: |
          aws s3 sync dist/ s3://pho-near-me-static/ \
            --delete \
            --cache-control "max-age=31536000, public" \
            --exclude "*.html" \
            --exclude "robots.txt" \
            --exclude "sitemap.xml"
            
      - name: Deploy HTML files with different cache settings
        run: |
          aws s3 sync dist/ s3://pho-near-me-static/ \
            --delete \
            --cache-control "max-age=600, public" \
            --exclude "*" \
            --include "*.html" \
            --include "robots.txt" \
            --include "sitemap.xml"
            
      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
      
      - name: Clean up S3 artifacts
        if: always()
        run: |
          aws s3 rm --recursive s3://pho-near-me-static/artifacts/build-${{ github.run_id }}-${{ github.run_attempt }}/
            
  # Optional job for preview deployments on pull requests
  preview:
    needs: build
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Download build artifact from S3
        run: |
          # Get the artifact path from the build job
          ARTIFACT_PATH="${{ needs.build.outputs.ARTIFACT_PATH }}"
          
          # Create the dist directory
          mkdir -p dist
          
          # Download the artifacts from S3
          aws s3 cp --recursive s3://pho-near-me-static/${ARTIFACT_PATH}/ dist/
          
          echo "Downloaded artifacts from S3 to dist/"
          
      - name: Deploy to preview S3 bucket
        run: |
          # Check if bucket exists, create if it doesn't
          if ! aws s3api head-bucket --bucket pho-near-me-preview 2>/dev/null; then
            echo "Creating preview bucket..."
            aws s3 mb s3://pho-near-me-preview
          fi
          
          # Sync files to preview bucket
          aws s3 sync dist/ s3://pho-near-me-preview/pr-${{ github.event.pull_request.number }}/ \
            --delete
            
      - name: Output preview information
        run: |
          echo "ðŸš€ Preview deployment completed to S3 bucket: pho-near-me-preview/pr-${{ github.event.pull_request.number }}/"
      
      - name: Clean up S3 artifacts
        if: always()
        run: |
          aws s3 rm --recursive s3://pho-near-me-static/artifacts/build-${{ github.run_id }}-${{ github.run_attempt }}/
